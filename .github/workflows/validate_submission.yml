name: Validate and Add Project Submission

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  validate:
    if: contains(github.event.issue.title, '[Project Submission]')
    runs-on: ubuntu-latest
    outputs:
      validated: ${{ steps.validate.outputs.validated }}
      name: ${{ steps.validate.outputs.name }}
      url: ${{ steps.validate.outputs.url }}
      desc: ${{ steps.validate.outputs.desc }}
      level: ${{ steps.validate.outputs.level }}
    steps:
      - name: Check required fields
        id: validate
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.issue.body || "";

            // Required fields
            const requiredFields = [
              "Project Name:",
              "Repository URL:",
              "Short Description:",
              "Contribution Level:",
              "Areas of Contribution:"
            ];

            let missing = [];
            for (const field of requiredFields) {
              if (!body.includes(field)) {
                missing.push(field);
              }
            }

            if (missing.length > 0) {
              const message = `⚠️ Thank you for your submission! However, it looks like you are missing the following required fields:\n\n${missing.map(f => `- ${f}`).join("\n")}\n\nPlease edit your issue to include these details.`;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });

              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["needs-info"]
              });

              core.setOutput('validated', 'false');
            } else {
              // Add "valid-submission" label
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["valid-submission"]
              });

              // Extract fields
              function extract(field) {
                const regex = new RegExp(`${field}\\s*(.*)`);
                const match = body.match(regex);
                return match ? match[1].trim() : "";
              }

              const name = extract("Project Name:");
              const url = extract("Repository URL:");
              const desc = extract("Short Description:");
              const level = extract("Contribution Level:");

              core.setOutput('validated', 'true');
              core.setOutput('name', name);
              core.setOutput('url', url);
              core.setOutput('desc', desc);
              core.setOutput('level', level);
            }

  create-pr:
    needs: validate
    if: needs.validate.outputs.validated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Append project entry
        run: |
          FILE="PROJECTS/BEGINNER_PROJECTS.md"
          if [[ "${{ needs.validate.outputs.level }}" =~ [Pp]rofessional ]]; then
            FILE="PROJECTS/PROFESSIONAL_PROJECTS.md"
          fi

          echo "- [${{ needs.validate.outputs.name }}](${{ needs.validate.outputs.url }}) - ${{ needs.validate.outputs.desc }}" >> "$FILE"

      - name: Commit and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add project: ${{ needs.validate.outputs.name }}"
          branch: add-project-${{ github.event.issue.number }}
          title: "Add project: ${{ needs.validate.outputs.name }}"
          body: |
            This pull request was automatically generated from [issue #${{ github.event.issue.number }}](${{ github.event.issue.html_url }}).

            Project: **${{ needs.validate.outputs.name }}**  
            Level: **${{ needs.validate.outputs.level }}**  
            Repo: ${{ needs.validate.outputs.url }}
