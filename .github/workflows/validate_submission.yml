name: Validate and Add Project Submission

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  validate:
    if: contains(github.event.issue.title, '[Project Submission]')
    runs-on: ubuntu-latest
    steps:
      - name: Validate submission fields
        id: validate
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.issue.body || "";

            const requiredFields = [
              "Project Name:",
              "Repository URL:",
              "Short Description:",
              "Contribution Level:",
              "Areas of Contribution:"
            ];

            let missing = requiredFields.filter(field => !body.includes(field));

            if (missing.length > 0) {
              const warning = [
                "Thank you for your submission!",
                "",
                "It looks like the following required fields are missing:",
                ...missing.map(f => `- ${f}`),
                "",
                "Please edit your issue to include these details. Issues missing required fields will be closed automatically after 7 days."
              ].join("\n");

              await github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: warning
              });

              await github.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["needs-info"]
              });

              core.setFailed("Missing required fields in project submission.");
            } else {
              await github.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["valid-submission"]
              });

              core.setOutput("validated", "true");
              core.setOutput("body", body);
            }

  auto-close:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'needs-info'
    steps:
      - name: Close issues older than 7 days with 'needs-info' label
        uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          days-before-stale: 7
          days-before-close: 0
          stale-issue-message: "This submission has been marked as needing more information and has not been updated in 7 days. Closing this issue. Please feel free to resubmit once all required fields are provided."
          close-issue-message: "Closed due to inactivity."
          only-labels: "needs-info"

  create-pr:
    needs: validate
    if: needs.validate.outputs.validated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract submission details
        id: extract
        run: |
          BODY="${{ needs.validate.outputs.body }}"

          NAME=$(echo "$BODY" | grep "Project Name:" | sed 's/Project Name://g' | xargs)
          URL=$(echo "$BODY" | grep "Repository URL:" | sed 's/Repository URL://g' | xargs)
          DESC=$(echo "$BODY" | grep "Short Description:" | sed 's/Short Description://g' | xargs)
          LEVEL=$(echo "$BODY" | grep "Contribution Level:" | sed 's/Contribution Level://g' | xargs)

          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "desc=$DESC" >> $GITHUB_OUTPUT
          echo "level=$LEVEL" >> $GITHUB_OUTPUT

      - name: Update project list
        run: |
          FILE="BEGINNER_PROJECTS.md"
          if [[ "${{ steps.extract.outputs.level }}" =~ [Pp]rofessional ]]; then
            FILE="PROFESSIONAL_PROJECTS.md"
          fi

          echo "- [${{ steps.extract.outputs.name }}](${{ steps.extract.outputs.url }}) - ${{ steps.extract.outputs.desc }}" >> "$FILE"

      - name: Commit and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add project: ${{ steps.extract.outputs.name }}"
          branch: add-project-${{ github.event.issue.number }}
          title: "Add project: ${{ steps.extract.outputs.name }}"
          body: |
            This pull request was automatically generated from [issue #${{ github.event.issue.number }}](${{ github.event.issue.html_url }}).

            Project: **${{ steps.extract.outputs.name }}**  
            Level: **${{ steps.extract.outputs.level }}**  
            Repo: ${{ steps.extract.outputs.url }}
